$date
	Fri Mar 11 12:32:55 2022
$end

$version
	Synopsys VCS version Q-2020.03-SP2-6_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 6d046b7f7beaa8f8 $end


$scope module MIPS_TEST $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var integer 32 # duration $end
$var wire 32 $ a_writedata [31:0] $end
$var wire 32 % a_dataadr [31:0] $end
$var wire 32 & a_readdata [31:0] $end
$var wire 32 ' a_instr [31:0] $end
$var wire 1 ( a_memwrite $end
$var wire 32 ) b_writedata [31:0] $end
$var wire 32 * b_dataadr [31:0] $end
$var wire 32 + b_readdata [31:0] $end
$var wire 32 , b_instr [31:0] $end
$var wire 1 - b_memwrite $end

$scope module DUT $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 $ a_writedata [31:0] $end
$var wire 32 & a_readdata [31:0] $end
$var wire 32 % a_dataadr [31:0] $end
$var wire 1 ( a_memwrite $end
$var wire 32 ' a_instr [31:0] $end
$var wire 32 ) b_writedata [31:0] $end
$var wire 32 + b_readdata [31:0] $end
$var wire 32 * b_dataadr [31:0] $end
$var wire 1 - b_memwrite $end
$var wire 32 , b_instr [31:0] $end
$var wire 32 . a_pc [31:0] $end
$var wire 32 / b_pc [31:0] $end

$scope module mips $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 ' a_instrF [31:0] $end
$var wire 32 & a_readdataM [31:0] $end
$var wire 32 . pcF [31:0] $end
$var wire 1 ( a_memwriteM $end
$var wire 32 % a_aluoutM [31:0] $end
$var wire 32 $ a_writedataM [31:0] $end
$var wire 32 , b_instrF [31:0] $end
$var wire 32 + b_readdataM [31:0] $end
$var wire 1 - b_memwriteM $end
$var wire 32 * b_aluoutM [31:0] $end
$var wire 32 ) b_writedataM [31:0] $end
$var wire 6 0 a_opD [5:0] $end
$var wire 6 1 a_fnD [5:0] $end
$var wire 1 2 a_equalD $end
$var wire 1 3 a_flushE $end
$var wire 1 4 a_regwriteW $end
$var wire 1 5 a_memtoregW $end
$var wire 1 6 a_jalW $end
$var wire 1 7 a_regwriteM $end
$var wire 1 8 a_memtoregM $end
$var wire 1 9 a_jalM $end
$var wire 1 : a_regwriteE $end
$var wire 1 ; a_memtoregE $end
$var wire 1 < a_jalE $end
$var wire 1 = a_branchD $end
$var wire 1 > a_jumpD $end
$var wire 1 ? a_pcsrcD $end
$var wire 2 @ a_alusrcE [1:0] $end
$var wire 2 A a_regdstE [1:0] $end
$var wire 4 B a_alucontrolE [3:0] $end
$var wire 6 C b_opD [5:0] $end
$var wire 6 D b_fnD [5:0] $end
$var wire 1 E b_equalD $end
$var wire 1 F b_flushE $end
$var wire 1 G b_regwriteW $end
$var wire 1 H b_memtoregW $end
$var wire 1 I b_jalW $end
$var wire 1 J b_regwriteM $end
$var wire 1 K b_memtoregM $end
$var wire 1 L b_jalM $end
$var wire 1 M b_regwriteE $end
$var wire 1 N b_memtoregE $end
$var wire 1 O b_jalE $end
$var wire 1 P b_branchD $end
$var wire 1 Q b_jumpD $end
$var wire 1 R b_pcsrcD $end
$var wire 2 S b_alusrcE [1:0] $end
$var wire 2 T b_regdstE [1:0] $end
$var wire 4 U b_alucontrolE [3:0] $end
$var wire 1 V a_jalD $end
$var wire 1 W b_jalD $end

$scope module a_ctrl $end
$var wire 1 X clk $end
$var wire 1 Y rst $end
$var wire 6 0 opD [5:0] $end
$var wire 6 1 fnD [5:0] $end
$var wire 1 2 equalD $end
$var wire 1 3 flushE $end
$var wire 1 4 regwriteW $end
$var wire 1 5 memtoregW $end
$var wire 1 6 jalW $end
$var wire 1 7 regwriteM $end
$var wire 1 8 memtoregM $end
$var wire 1 9 jalM $end
$var wire 1 ( memwriteM $end
$var wire 1 : regwriteE $end
$var wire 1 ; memtoregE $end
$var wire 1 < jalE $end
$var wire 1 V jalD $end
$var wire 4 B alucontrolE [3:0] $end
$var wire 2 @ alusrcE [1:0] $end
$var wire 2 A regdstE [1:0] $end
$var wire 1 = branchD $end
$var wire 1 > jumpD $end
$var wire 1 ? pcsrcD $end
$var wire 1 Z regwriteD $end
$var wire 1 [ memwriteD $end
$var wire 1 \ memtoregD $end
$var wire 2 ] alusrcD [1:0] $end
$var wire 2 ^ regdstD [1:0] $end
$var wire 1 _ bneD $end
$var wire 3 ` aluopD [2:0] $end
$var wire 4 a alucontrolD [3:0] $end
$var wire 1 b memwriteE $end

$scope module md $end
$var wire 6 0 op [5:0] $end
$var wire 1 Z regwrite $end
$var wire 1 [ memwrite $end
$var wire 1 = branch $end
$var wire 1 \ memtoreg $end
$var wire 2 ] alusrc [1:0] $end
$var wire 2 ^ regdst [1:0] $end
$var wire 1 > jump $end
$var wire 1 V jal $end
$var wire 1 _ bne $end
$var wire 3 ` aluop [2:0] $end
$var reg 14 c controls [13:0] $end
$upscope $end


$scope module ad $end
$var wire 6 1 funct [5:0] $end
$var wire 3 ` aluop [2:0] $end
$var wire 4 a alucontrol [3:0] $end
$var reg 4 a internal_ctrl [3:0] $end
$upscope $end


$scope module regE $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 12 d d [11:0] $end
$var wire 12 e q [11:0] $end
$var reg 12 f mem [11:0] $end
$upscope $end


$scope module regM $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 : d [3] $end
$var wire 1 ; d [2] $end
$var wire 1 b d [1] $end
$var wire 1 < d [0] $end
$var wire 1 7 q [3] $end
$var wire 1 8 q [2] $end
$var wire 1 ( q [1] $end
$var wire 1 9 q [0] $end
$var reg 4 g mem [3:0] $end
$upscope $end


$scope module regW $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 7 d [2] $end
$var wire 1 8 d [1] $end
$var wire 1 9 d [0] $end
$var wire 1 4 q [2] $end
$var wire 1 5 q [1] $end
$var wire 1 6 q [0] $end
$var reg 3 h mem [2:0] $end
$upscope $end

$upscope $end


$scope module b_ctrl $end
$var wire 1 X clk $end
$var wire 1 Y rst $end
$var wire 6 C opD [5:0] $end
$var wire 6 D fnD [5:0] $end
$var wire 1 E equalD $end
$var wire 1 F flushE $end
$var wire 1 G regwriteW $end
$var wire 1 H memtoregW $end
$var wire 1 I jalW $end
$var wire 1 J regwriteM $end
$var wire 1 K memtoregM $end
$var wire 1 L jalM $end
$var wire 1 - memwriteM $end
$var wire 1 M regwriteE $end
$var wire 1 N memtoregE $end
$var wire 1 O jalE $end
$var wire 1 W jalD $end
$var wire 4 U alucontrolE [3:0] $end
$var wire 2 S alusrcE [1:0] $end
$var wire 2 T regdstE [1:0] $end
$var wire 1 P branchD $end
$var wire 1 Q jumpD $end
$var wire 1 R pcsrcD $end
$var wire 1 i regwriteD $end
$var wire 1 j memwriteD $end
$var wire 1 k memtoregD $end
$var wire 2 l alusrcD [1:0] $end
$var wire 2 m regdstD [1:0] $end
$var wire 1 n bneD $end
$var wire 3 o aluopD [2:0] $end
$var wire 4 p alucontrolD [3:0] $end
$var wire 1 q memwriteE $end

$scope module md $end
$var wire 6 C op [5:0] $end
$var wire 1 i regwrite $end
$var wire 1 j memwrite $end
$var wire 1 P branch $end
$var wire 1 k memtoreg $end
$var wire 2 l alusrc [1:0] $end
$var wire 2 m regdst [1:0] $end
$var wire 1 Q jump $end
$var wire 1 W jal $end
$var wire 1 n bne $end
$var wire 3 o aluop [2:0] $end
$var reg 14 r controls [13:0] $end
$upscope $end


$scope module ad $end
$var wire 6 D funct [5:0] $end
$var wire 3 o aluop [2:0] $end
$var wire 4 p alucontrol [3:0] $end
$var reg 4 p internal_ctrl [3:0] $end
$upscope $end


$scope module regE $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 12 s d [11:0] $end
$var wire 12 t q [11:0] $end
$var reg 12 u mem [11:0] $end
$upscope $end


$scope module regM $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 M d [3] $end
$var wire 1 N d [2] $end
$var wire 1 q d [1] $end
$var wire 1 O d [0] $end
$var wire 1 J q [3] $end
$var wire 1 K q [2] $end
$var wire 1 - q [1] $end
$var wire 1 L q [0] $end
$var reg 4 v mem [3:0] $end
$upscope $end


$scope module regW $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 J d [2] $end
$var wire 1 K d [1] $end
$var wire 1 L d [0] $end
$var wire 1 G q [2] $end
$var wire 1 H q [1] $end
$var wire 1 I q [0] $end
$var reg 3 w mem [2:0] $end
$upscope $end

$upscope $end


$scope module dp $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 ' a_instrF [31:0] $end
$var wire 1 4 a_regwriteW $end
$var wire 1 5 a_memtoregW $end
$var wire 1 6 a_jalW $end
$var wire 1 7 a_regwriteM $end
$var wire 1 8 a_memtoregM $end
$var wire 1 9 a_jalM $end
$var wire 1 ( a_memwriteM $end
$var wire 1 : a_regwriteE $end
$var wire 1 ; a_memtoregE $end
$var wire 1 < a_jalE $end
$var wire 4 B a_alucontrolE [3:0] $end
$var wire 2 @ a_alusrcE [1:0] $end
$var wire 2 A a_regdstE [1:0] $end
$var wire 1 = a_branchD $end
$var wire 1 > a_jumpD $end
$var wire 1 ? a_pcsrcD $end
$var wire 1 V a_jalD $end
$var wire 32 & a_readdataM [31:0] $end
$var wire 32 % a_aluoutM [31:0] $end
$var wire 32 $ a_writedataM [31:0] $end
$var wire 32 . pcF [31:0] $end
$var wire 1 3 a_flushE $end
$var wire 1 2 a_equalD $end
$var wire 6 0 a_opD [5:0] $end
$var wire 6 1 a_fnD [5:0] $end
$var wire 32 , b_instrF [31:0] $end
$var wire 1 G b_regwriteW $end
$var wire 1 H b_memtoregW $end
$var wire 1 I b_jalW $end
$var wire 1 J b_regwriteM $end
$var wire 1 K b_memtoregM $end
$var wire 1 L b_jalM $end
$var wire 1 - b_memwriteM $end
$var wire 1 M b_regwriteE $end
$var wire 1 N b_memtoregE $end
$var wire 1 O b_jalE $end
$var wire 4 U b_alucontrolE [3:0] $end
$var wire 2 S b_alusrcE [1:0] $end
$var wire 2 T b_regdstE [1:0] $end
$var wire 1 P b_branchD $end
$var wire 1 Q b_jumpD $end
$var wire 1 R b_pcsrcD $end
$var wire 1 W b_jalD $end
$var wire 32 + b_readdataM [31:0] $end
$var wire 32 * b_aluoutM [31:0] $end
$var wire 32 ) b_writedataM [31:0] $end
$var wire 1 F b_flushE $end
$var wire 1 E b_equalD $end
$var wire 6 C b_opD [5:0] $end
$var wire 6 D b_fnD [5:0] $end
$var wire 1 x a_forwardAD $end
$var wire 1 y a_forwardBD $end
$var wire 1 3 a_stallF $end
$var wire 1 3 a_stallD $end
$var wire 1 z a_flushD $end
$var wire 2 { a_forwardAE [1:0] $end
$var wire 2 | a_forwardBE [1:0] $end
$var wire 5 } a_rsD [4:0] $end
$var wire 5 ~ a_rtD [4:0] $end
$var wire 5 "! a_rdD [4:0] $end
$var wire 5 "" a_rsE [4:0] $end
$var wire 5 "# a_rtE [4:0] $end
$var wire 5 "$ a_rdE [4:0] $end
$var wire 5 "% a_writeregE [4:0] $end
$var wire 5 "& a_writeregM [4:0] $end
$var wire 5 "' a_writeregW [4:0] $end
$var wire 32 "( a_wd3 [31:0] $end
$var wire 32 ") a_pcnextF [31:0] $end
$var wire 32 "* a_pcplus4F [31:0] $end
$var wire 32 "+ a_pcplus4D [31:0] $end
$var wire 32 ", a_pcplus4E [31:0] $end
$var wire 32 "- a_pcplus4M [31:0] $end
$var wire 32 ". a_pcplus4W [31:0] $end
$var wire 32 "/ a_pctempD [31:0] $end
$var wire 32 "0 a_pcbranchD [31:0] $end
$var wire 32 "1 a_instrD [31:0] $end
$var wire 32 "2 a_signimmD [31:0] $end
$var wire 32 "3 a_signimmE [31:0] $end
$var wire 32 "4 a_signimmshD [31:0] $end
$var wire 32 "5 a_luiD [31:0] $end
$var wire 32 "6 a_luiE [31:0] $end
$var wire 32 "7 a_srcAD [31:0] $end
$var wire 32 "8 a_srcAE [31:0] $end
$var wire 32 "9 a_srcBD [31:0] $end
$var wire 32 ": a_srcBE [31:0] $end
$var wire 32 "; a_writedataE [31:0] $end
$var wire 32 "< a_rfread1E [31:0] $end
$var wire 32 "= a_rfread2E [31:0] $end
$var wire 32 "> a_eq1 [31:0] $end
$var wire 32 "? a_eq2 [31:0] $end
$var wire 32 "@ a_aluoutE [31:0] $end
$var wire 32 "A a_aluoutW [31:0] $end
$var wire 32 "B a_readdataW [31:0] $end
$var wire 32 "C a_resultW [31:0] $end
$var wire 1 "D b_forwardAD $end
$var wire 1 "E b_forwardBD $end
$var wire 1 "F b_stallF $end
$var wire 1 "G b_stallD $end
$var wire 1 "H b_flushD $end
$var wire 2 "I b_forwardAE [1:0] $end
$var wire 2 "J b_forwardBE [1:0] $end
$var wire 5 "K b_rsD [4:0] $end
$var wire 5 "L b_rtD [4:0] $end
$var wire 5 "M b_rdD [4:0] $end
$var wire 5 "N b_rsE [4:0] $end
$var wire 5 "O b_rtE [4:0] $end
$var wire 5 "P b_rdE [4:0] $end
$var wire 5 "Q b_writeregE [4:0] $end
$var wire 5 "R b_writeregM [4:0] $end
$var wire 5 "S b_writeregW [4:0] $end
$var wire 32 "T b_wd3 [31:0] $end
$var wire 32 "U b_pcnextF [31:0] $end
$var wire 32 "V b_pcplus4F [31:0] $end
$var wire 32 "W b_pcplus4D [31:0] $end
$var wire 32 "X b_pcplus4E [31:0] $end
$var wire 32 "Y b_pcplus4M [31:0] $end
$var wire 32 "Z b_pcplus4W [31:0] $end
$var wire 32 "[ b_pctempD [31:0] $end
$var wire 32 "\ b_pcbranchD [31:0] $end
$var wire 32 "] b_instrD [31:0] $end
$var wire 32 "^ b_signimmD [31:0] $end
$var wire 32 "_ b_signimmE [31:0] $end
$var wire 32 "` b_signimmshD [31:0] $end
$var wire 32 "a b_luiD [31:0] $end
$var wire 32 "b b_luiE [31:0] $end
$var wire 32 "c b_srcAD [31:0] $end
$var wire 32 "d b_srcAE [31:0] $end
$var wire 32 "e b_srcBD [31:0] $end
$var wire 32 "f b_srcBE [31:0] $end
$var wire 32 "g b_writedataE [31:0] $end
$var wire 32 "h b_rfread1E [31:0] $end
$var wire 32 "i b_rfread2E [31:0] $end
$var wire 32 "j b_eq1 [31:0] $end
$var wire 32 "k b_eq2 [31:0] $end
$var wire 32 "l b_aluoutE [31:0] $end
$var wire 32 "m b_aluoutW [31:0] $end
$var wire 32 "n b_readdataW [31:0] $end
$var wire 32 "o b_resultW [31:0] $end
$var wire 32 "p pcplus4F [31:0] $end
$var wire 32 "q pcplus8F [31:0] $end
$var wire 32 "r pctempF [31:0] $end
$var wire 32 "s pcnextF [31:0] $end
$var wire 1 "t a_zeroE $end
$var wire 1 "u b_zeroE $end

$scope module pcbrmux $end
$var wire 32 "q d0 [31:0] $end
$var wire 32 "0 d1 [31:0] $end
$var wire 32 "\ d2 [31:0] $end
$var wire 1 R s [1] $end
$var wire 1 ? s [0] $end
$var wire 32 "r y [31:0] $end
$upscope $end


$scope module pcjmux $end
$var wire 32 "r d0 [31:0] $end
$var wire 32 "v d1 [31:0] $end
$var wire 32 "w d2 [31:0] $end
$var wire 1 Q s [1] $end
$var wire 1 > s [0] $end
$var wire 32 "s y [31:0] $end
$upscope $end


$scope module pcreg $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 "x en $end
$var wire 32 "s d [31:0] $end
$var wire 32 . q [31:0] $end
$var reg 32 . mem [31:0] $end
$upscope $end


$scope module pcplus4 $end
$var wire 32 . a [31:0] $end
$var wire 32 "y b [31:0] $end
$var wire 32 "p y [31:0] $end
$upscope $end


$scope module pcplus8 $end
$var wire 32 . a [31:0] $end
$var wire 32 "z b [31:0] $end
$var wire 32 "q y [31:0] $end
$upscope $end


$scope module a_RD1 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 "{ en $end
$var wire 1 z clr $end
$var wire 32 ' d [31:0] $end
$var wire 32 "1 q [31:0] $end
$var reg 32 "| mem [31:0] $end
$upscope $end


$scope module a_RD2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 "{ en $end
$var wire 1 z clr $end
$var wire 32 "p d [31:0] $end
$var wire 32 "+ q [31:0] $end
$var reg 32 "} mem [31:0] $end
$upscope $end


$scope module b_RD1 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 "~ en $end
$var wire 1 #! clr $end
$var wire 32 , d [31:0] $end
$var wire 32 "] q [31:0] $end
$var reg 32 #" mem [31:0] $end
$upscope $end


$scope module b_RD2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 "~ en $end
$var wire 1 #! clr $end
$var wire 32 "q d [31:0] $end
$var wire 32 "W q [31:0] $end
$var reg 32 ## mem [31:0] $end
$upscope $end


$scope module a_jalmux $end
$var wire 32 "C d0 [31:0] $end
$var wire 32 ". d1 [31:0] $end
$var wire 1 6 s $end
$var wire 32 "( y [31:0] $end
$upscope $end


$scope module a_se $end
$var wire 16 #$ inst [15:0] $end
$var wire 32 "2 imm [31:0] $end
$upscope $end


$scope module a_signimmsh $end
$var wire 32 "2 a [31:0] $end
$var wire 32 "4 y [31:0] $end
$upscope $end


$scope module a_lui $end
$var wire 16 #$ a [15:0] $end
$var wire 32 "5 y [31:0] $end
$upscope $end


$scope module a_pcplus4 $end
$var wire 32 "4 a [31:0] $end
$var wire 32 "+ b [31:0] $end
$var wire 32 "0 y [31:0] $end
$upscope $end


$scope module a_FADmux $end
$var wire 32 "7 d0 [31:0] $end
$var wire 32 % d1 [31:0] $end
$var wire 1 x s $end
$var wire 32 "> y [31:0] $end
$upscope $end


$scope module a_FBDmux $end
$var wire 32 "9 d0 [31:0] $end
$var wire 32 % d1 [31:0] $end
$var wire 1 y s $end
$var wire 32 "? y [31:0] $end
$upscope $end


$scope module a_eq $end
$var wire 32 "> a [31:0] $end
$var wire 32 "? b [31:0] $end
$var wire 1 2 equal $end
$upscope $end


$scope module b_jalmux $end
$var wire 32 "o d0 [31:0] $end
$var wire 32 "Z d1 [31:0] $end
$var wire 1 I s $end
$var wire 32 "T y [31:0] $end
$upscope $end


$scope module b_se $end
$var wire 16 #% inst [15:0] $end
$var wire 32 "^ imm [31:0] $end
$upscope $end


$scope module b_signimmsh $end
$var wire 32 "^ a [31:0] $end
$var wire 32 "` y [31:0] $end
$upscope $end


$scope module b_lui $end
$var wire 16 #% a [15:0] $end
$var wire 32 "a y [31:0] $end
$upscope $end


$scope module b_pcplus4 $end
$var wire 32 "` a [31:0] $end
$var wire 32 "W b [31:0] $end
$var wire 32 "\ y [31:0] $end
$upscope $end


$scope module b_FADmux $end
$var wire 32 "c d0 [31:0] $end
$var wire 32 * d1 [31:0] $end
$var wire 1 "D s $end
$var wire 32 "j y [31:0] $end
$upscope $end


$scope module b_FBDmux $end
$var wire 32 "e d0 [31:0] $end
$var wire 32 * d1 [31:0] $end
$var wire 1 "E s $end
$var wire 32 "k y [31:0] $end
$upscope $end


$scope module b_eq $end
$var wire 32 "j a [31:0] $end
$var wire 32 "k b [31:0] $end
$var wire 1 E equal $end
$upscope $end


$scope module rf $end
$var wire 1 ! CLK $end
$var wire 1 " RST $end
$var wire 1 4 WEA3 $end
$var wire 1 G WEB3 $end
$var wire 5 } A1 [4:0] $end
$var wire 5 ~ A2 [4:0] $end
$var wire 5 "' A3 [4:0] $end
$var wire 5 "K B1 [4:0] $end
$var wire 5 "L B2 [4:0] $end
$var wire 5 "S B3 [4:0] $end
$var wire 32 "( WDA3 [31:0] $end
$var wire 32 "T WDB3 [31:0] $end
$var wire 32 "7 RDA1 [31:0] $end
$var wire 32 "9 RDA2 [31:0] $end
$var wire 32 "c RDB1 [31:0] $end
$var wire 32 "e RDB2 [31:0] $end
$var integer 32 #& i $end
$upscope $end


$scope module a_RE1 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 32 "7 d [31:0] $end
$var wire 32 "< q [31:0] $end
$var reg 32 #' mem [31:0] $end
$upscope $end


$scope module a_RE2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 32 "9 d [31:0] $end
$var wire 32 "= q [31:0] $end
$var reg 32 #( mem [31:0] $end
$upscope $end


$scope module a_RE3 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 5 } d [4:0] $end
$var wire 5 "" q [4:0] $end
$var reg 5 #) mem [4:0] $end
$upscope $end


$scope module a_RE4 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 5 ~ d [4:0] $end
$var wire 5 "# q [4:0] $end
$var reg 5 #* mem [4:0] $end
$upscope $end


$scope module a_RE5 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 5 "! d [4:0] $end
$var wire 5 "$ q [4:0] $end
$var reg 5 #+ mem [4:0] $end
$upscope $end


$scope module a_RE6 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 32 "2 d [31:0] $end
$var wire 32 "3 q [31:0] $end
$var reg 32 #, mem [31:0] $end
$upscope $end


$scope module a_RE7 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 32 #- d [31:0] $end
$var wire 32 "6 q [31:0] $end
$var reg 32 #. mem [31:0] $end
$upscope $end


$scope module a_RE8 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 3 clr $end
$var wire 32 "+ d [31:0] $end
$var wire 32 ", q [31:0] $end
$var reg 32 #/ mem [31:0] $end
$upscope $end


$scope module b_RE1 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 32 "c d [31:0] $end
$var wire 32 "h q [31:0] $end
$var reg 32 #0 mem [31:0] $end
$upscope $end


$scope module b_RE2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 32 "e d [31:0] $end
$var wire 32 "i q [31:0] $end
$var reg 32 #1 mem [31:0] $end
$upscope $end


$scope module b_RE3 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 5 "K d [4:0] $end
$var wire 5 "N q [4:0] $end
$var reg 5 #2 mem [4:0] $end
$upscope $end


$scope module b_RE4 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 5 "L d [4:0] $end
$var wire 5 "O q [4:0] $end
$var reg 5 #3 mem [4:0] $end
$upscope $end


$scope module b_RE5 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 5 "M d [4:0] $end
$var wire 5 "P q [4:0] $end
$var reg 5 #4 mem [4:0] $end
$upscope $end


$scope module b_RE6 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 32 "^ d [31:0] $end
$var wire 32 "_ q [31:0] $end
$var reg 32 #5 mem [31:0] $end
$upscope $end


$scope module b_RE7 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 32 #6 d [31:0] $end
$var wire 32 "b q [31:0] $end
$var reg 32 #7 mem [31:0] $end
$upscope $end


$scope module b_RE8 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 1 F clr $end
$var wire 32 "W d [31:0] $end
$var wire 32 "X q [31:0] $end
$var reg 32 #8 mem [31:0] $end
$upscope $end


$scope module a_regdstmux $end
$var wire 5 "# d0 [4:0] $end
$var wire 5 "$ d1 [4:0] $end
$var wire 5 #9 d2 [4:0] $end
$var wire 2 A s [1:0] $end
$var wire 5 "% y [4:0] $end
$upscope $end


$scope module a_forwardAEmux $end
$var wire 32 "< d0 [31:0] $end
$var wire 32 "C d1 [31:0] $end
$var wire 32 % d2 [31:0] $end
$var wire 2 { s [1:0] $end
$var wire 32 "8 y [31:0] $end
$upscope $end


$scope module a_forwardBEmux $end
$var wire 32 "= d0 [31:0] $end
$var wire 32 "C d1 [31:0] $end
$var wire 32 % d2 [31:0] $end
$var wire 2 | s [1:0] $end
$var wire 32 "; y [31:0] $end
$upscope $end


$scope module a_alusrcmux $end
$var wire 32 "; d0 [31:0] $end
$var wire 32 "3 d1 [31:0] $end
$var wire 32 "6 d2 [31:0] $end
$var wire 2 @ s [1:0] $end
$var wire 32 ": y [31:0] $end
$upscope $end


$scope module b_regdstmux $end
$var wire 5 "O d0 [4:0] $end
$var wire 5 "P d1 [4:0] $end
$var wire 5 #: d2 [4:0] $end
$var wire 2 T s [1:0] $end
$var wire 5 "Q y [4:0] $end
$upscope $end


$scope module b_forwardAEmux $end
$var wire 32 "h d0 [31:0] $end
$var wire 32 "o d1 [31:0] $end
$var wire 32 * d2 [31:0] $end
$var wire 2 "I s [1:0] $end
$var wire 32 "d y [31:0] $end
$upscope $end


$scope module b_forwardBEmux $end
$var wire 32 "i d0 [31:0] $end
$var wire 32 "o d1 [31:0] $end
$var wire 32 * d2 [31:0] $end
$var wire 2 "J s [1:0] $end
$var wire 32 "g y [31:0] $end
$upscope $end


$scope module b_alusrcmux $end
$var wire 32 "g d0 [31:0] $end
$var wire 32 "_ d1 [31:0] $end
$var wire 32 "b d2 [31:0] $end
$var wire 2 S s [1:0] $end
$var wire 32 "f y [31:0] $end
$upscope $end


$scope module a_alu $end
$var wire 32 "8 InA [31:0] $end
$var wire 32 ": InB [31:0] $end
$var wire 4 B ALUControl [3:0] $end
$var reg 32 #; out [31:0] $end
$var wire 1 "t zero $end
$var wire 1 #< less $end
$var wire 1 #= greater $end
$var wire 1 #> equal $end
$var wire 32 #? BB [31:0] $end
$var wire 32 #@ S [31:0] $end
$var wire 1 #A cout $end
$upscope $end


$scope module b_alu $end
$var wire 32 "d InA [31:0] $end
$var wire 32 "f InB [31:0] $end
$var wire 4 U ALUControl [3:0] $end
$var reg 32 #B out [31:0] $end
$var wire 1 "u zero $end
$var wire 1 #C less $end
$var wire 1 #D greater $end
$var wire 1 #E equal $end
$var wire 32 #F BB [31:0] $end
$var wire 32 #G S [31:0] $end
$var wire 1 #H cout $end
$upscope $end


$scope module a_RM2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 "@ d [31:0] $end
$var wire 32 % q [31:0] $end
$var reg 32 #I mem [31:0] $end
$upscope $end


$scope module a_RM3 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 "; d [31:0] $end
$var wire 32 $ q [31:0] $end
$var reg 32 #J mem [31:0] $end
$upscope $end


$scope module a_RM4 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 5 "% d [4:0] $end
$var wire 5 "& q [4:0] $end
$var reg 5 #K mem [4:0] $end
$upscope $end


$scope module a_RM5 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 ", d [31:0] $end
$var wire 32 "- q [31:0] $end
$var reg 32 #L mem [31:0] $end
$upscope $end


$scope module b_RM2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 "l d [31:0] $end
$var wire 32 * q [31:0] $end
$var reg 32 #M mem [31:0] $end
$upscope $end


$scope module b_RM3 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 "g d [31:0] $end
$var wire 32 ) q [31:0] $end
$var reg 32 #N mem [31:0] $end
$upscope $end


$scope module b_RM4 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 5 "Q d [4:0] $end
$var wire 5 "R q [4:0] $end
$var reg 5 #O mem [4:0] $end
$upscope $end


$scope module b_RM5 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 "X d [31:0] $end
$var wire 32 "Y q [31:0] $end
$var reg 32 #P mem [31:0] $end
$upscope $end


$scope module a_RW1 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 & d [31:0] $end
$var wire 32 "B q [31:0] $end
$var reg 32 #Q mem [31:0] $end
$upscope $end


$scope module a_RW2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 % d [31:0] $end
$var wire 32 "A q [31:0] $end
$var reg 32 #R mem [31:0] $end
$upscope $end


$scope module a_RW3 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 5 "& d [4:0] $end
$var wire 5 "' q [4:0] $end
$var reg 5 #S mem [4:0] $end
$upscope $end


$scope module a_RW4 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 "- d [31:0] $end
$var wire 32 ". q [31:0] $end
$var reg 32 #T mem [31:0] $end
$upscope $end


$scope module b_RW1 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 + d [31:0] $end
$var wire 32 "n q [31:0] $end
$var reg 32 #U mem [31:0] $end
$upscope $end


$scope module b_RW2 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 * d [31:0] $end
$var wire 32 "m q [31:0] $end
$var reg 32 #V mem [31:0] $end
$upscope $end


$scope module b_RW3 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 5 "R d [4:0] $end
$var wire 5 "S q [4:0] $end
$var reg 5 #W mem [4:0] $end
$upscope $end


$scope module b_RW4 $end
$var wire 1 X clk $end
$var wire 1 Y reset $end
$var wire 32 "Y d [31:0] $end
$var wire 32 "Z q [31:0] $end
$var reg 32 #X mem [31:0] $end
$upscope $end


$scope module a_memtoregmux $end
$var wire 32 "A d0 [31:0] $end
$var wire 32 "B d1 [31:0] $end
$var wire 1 5 s $end
$var wire 32 "C y [31:0] $end
$upscope $end


$scope module b_memtoregmux $end
$var wire 32 "m d0 [31:0] $end
$var wire 32 "n d1 [31:0] $end
$var wire 1 H s $end
$var wire 32 "o y [31:0] $end
$upscope $end


$scope module h $end
$var wire 1 4 a_regwriteW $end
$var wire 1 7 a_regwriteM $end
$var wire 1 8 a_memtoregM $end
$var wire 5 "' a_writeregW [4:0] $end
$var wire 5 "& a_writeregM [4:0] $end
$var wire 5 "% a_writeregE [4:0] $end
$var wire 1 : a_regwriteE $end
$var wire 1 ; a_memtoregE $end
$var wire 1 = a_branchD $end
$var wire 5 "" a_rsE [4:0] $end
$var wire 5 "# a_rtE [4:0] $end
$var wire 5 } a_rsD [4:0] $end
$var wire 5 ~ a_rtD [4:0] $end
$var wire 1 V a_jalD $end
$var wire 1 < a_jalE $end
$var wire 1 9 a_jalM $end
$var wire 1 > a_jumpD $end
$var wire 2 { a_forwardAE [1:0] $end
$var wire 2 | a_forwardBE [1:0] $end
$var wire 1 x a_forwardAD $end
$var wire 1 y a_forwardBD $end
$var wire 1 3 a_stallD $end
$var wire 1 3 a_stallF $end
$var wire 1 3 a_flushE $end
$var wire 1 G b_regwriteW $end
$var wire 1 J b_regwriteM $end
$var wire 1 K b_memtoregM $end
$var wire 5 "S b_writeregW [4:0] $end
$var wire 5 "R b_writeregM [4:0] $end
$var wire 5 "Q b_writeregE [4:0] $end
$var wire 1 M b_regwriteE $end
$var wire 1 N b_memtoregE $end
$var wire 1 P b_branchD $end
$var wire 5 "N b_rsE [4:0] $end
$var wire 5 "O b_rtE [4:0] $end
$var wire 5 "K b_rsD [4:0] $end
$var wire 5 "L b_rtD [4:0] $end
$var wire 1 W b_jalD $end
$var wire 1 O b_jalE $end
$var wire 1 L b_jalM $end
$var wire 1 Q b_jumpD $end
$var wire 2 "I b_forwardAE [1:0] $end
$var wire 2 "J b_forwardBE [1:0] $end
$var wire 1 "D b_forwardAD $end
$var wire 1 "E b_forwardBD $end
$var wire 1 "G b_stallD $end
$var wire 1 "F b_stallF $end
$var wire 1 F b_flushE $end
$var wire 1 #Y a_lwstall $end
$var wire 1 #Z a_branchstall $end
$var wire 1 #[ a_jalstall $end
$var reg 2 { a_forwardAE_temp [1:0] $end
$var reg 2 | a_forwardBE_temp [1:0] $end
$var wire 1 #\ b_lwstall $end
$var wire 1 #] b_branchstall $end
$var wire 1 #^ b_jalstall $end
$var reg 2 "I b_forwardAE_temp [1:0] $end
$var reg 2 "J b_forwardBE_temp [1:0] $end
$upscope $end

$upscope $end

$upscope $end


$scope module imem $end
$var wire 6 #_ Address [5:0] $end
$var wire 32 ' ReadDataA [31:0] $end
$var wire 32 , ReadDataB [31:0] $end
$upscope $end


$scope module dmem $end
$var wire 1 ! CLK $end
$var wire 1 " RST $end
$var wire 1 ( WriteEnableA $end
$var wire 1 - WriteEnableB $end
$var wire 32 % AddressA [31:0] $end
$var wire 32 $ WriteDataA [31:0] $end
$var wire 32 * AddressB [31:0] $end
$var wire 32 ) WriteDataB [31:0] $end
$var wire 32 & ReadDataA [31:0] $end
$var wire 32 + ReadDataB [31:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0#Z
0#]
0"H
0#^
0#\
0"F
1!
1"
xx
xy
x#[
x#Y
x"D
x"E
b00 {
b00 |
b00000000000000000000000000000000 "C
b00000000000000000000000000000000 "(
b00 "I
b00 "J
b00000000000000000000000000000000 "o
b00000000000000000000000000000000 "T
b00000000000000000000000000000000 #
b00000000000000000000000000100000 #&
b00000000000000000000000000000000 .
b00000000000000000000000000001000 "s
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "j
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "k
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "v
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "`
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "w
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxxxxxx #_
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "\
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "0
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "r
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "5
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ">
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "?
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "4
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "a
0b
xZ
x[
x\
x_
b010 `
b10100000000010 c
bxxxx a
b000000000000 f
b0000 g
b000 h
bxx ]
bxx ^
bxxxxxxxxxxxx e
bxxxxxxxxxxxx d
0q
xi
xj
xk
xn
b010 o
b10100000000010 r
bxxxx p
b000000000000 u
b0000 v
b000 w
bxx l
bxx m
bxxxxxxxxxxxx t
bxxxxxxxxxxxx s
b00000000000000000000000000000000 "|
b00000000000000000000000000000000 "}
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 ##
b00000000000000000000000000000000 #'
b00000000000000000000000000000000 #(
b00000 #)
b00000 #*
b00000 #+
b00000000000000000000000000000000 #,
b00000000000000000000000000000000 #.
b00000000000000000000000000000000 #/
b00000000000000000000000000000000 #0
b00000000000000000000000000000000 #1
b00000 #2
b00000 #3
b00000 #4
b00000000000000000000000000000000 #5
b00000000000000000000000000000000 #7
b00000000000000000000000000000000 #8
x#>
x#<
x#=
x#A
b00000000000000000000000000000000 #?
b00000000000000000000000000000000 #@
b00000000000000000000000000000000 #;
x#E
x#C
x#D
x#H
b00000000000000000000000000000000 #F
b00000000000000000000000000000000 #G
b00000000000000000000000000000000 #B
b00000000000000000000000000000000 #I
b00000000000000000000000000000000 #J
b00000 #K
b00000000000000000000000000000000 #L
b00000000000000000000000000000000 #M
b00000000000000000000000000000000 #N
b00000 #O
b00000000000000000000000000000000 #P
b00000000000000000000000000000000 #Q
b00000000000000000000000000000000 #R
b00000 #S
b00000000000000000000000000000000 #T
b00000000000000000000000000000000 #U
b00000000000000000000000000000000 #V
b00000 #W
b00000000000000000000000000000000 #X
b11111 #:
b11111 #9
b00000000000000000000000000001000 "z
b00000000000000000000000000000100 "y
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz "[
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz "V
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz "U
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz "/
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz "*
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz ")
0"G
1"~
b00000000000000000000000000000000 "1
b00000 }
b00000 ~
b00000 "!
b0000000000000000 #$
b000000 0
b000000 1
b00000000000000000000000000000000 "2
b00000000000000000000000000000000 #-
b00000000000000000000000000000000 #6
b0000000000000000 #%
b00000000000000000000000000000000 "]
b00000000000000000000000000000000 "^
b00000 "K
b00000 "L
b00000 "M
b000000 C
b000000 D
b00000000000000000000000000000000 %
b00000000000000000000000000000000 *
b00000000000000000000000000000000 "W
b00000000000000000000000000000000 "+
b00 @
b00 A
b00 S
b00 T
12
03
1"{
1"x
04
05
06
07
08
09
0(
0:
0;
0<
0V
b0000 B
0=
0>
0?
1E
0F
0G
0H
0I
0J
0K
0L
0-
0M
0N
0O
0W
b0000 U
0P
0Q
0R
0z
b00000000000000000100000000100101 '
b00000000000000000000000000000100 "p
b00111100000010010000000000000001 ,
b00000000000000000000000000001000 "q
b00000000000000000000000000000000 "7
b00000000000000000000000000000000 "<
b00000000000000000000000000000000 "9
b00000000000000000000000000000000 "=
b00000 ""
b00000 "#
b00000 "$
b00000000000000000000000000000000 "3
b00000000000000000000000000000000 "6
b00000000000000000000000000000000 ",
b00000000000000000000000000000000 "c
b00000000000000000000000000000000 "h
b00000000000000000000000000000000 "e
b00000000000000000000000000000000 "i
b00000 "N
b00000 "O
b00000 "P
b00000000000000000000000000000000 "_
b00000000000000000000000000000000 "b
b00000000000000000000000000000000 "X
b00000000000000000000000000000000 "8
b00000000000000000000000000000000 ":
b00000000000000000000000000000000 "@
1"t
b00000000000000000000000000000000 "d
b00000000000000000000000000000000 "f
b00000000000000000000000000000000 "l
1"u
b00000000000000000000000000000000 ";
b00000000000000000000000000000000 $
b00000 "%
b00000 "&
b00000000000000000000000000000000 "-
b00000000000000000000000000000000 "g
b00000000000000000000000000000000 )
b00000 "Q
b00000 "R
b00000000000000000000000000000000 "Y
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
b00000000000000000000000000000000 "B
b00000000000000000000000000000000 "A
b00000 "'
b00000000000000000000000000000000 ".
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
b00000000000000000000000000000000 "n
b00000000000000000000000000000000 "m
b00000 "S
b00000000000000000000000000000000 "Z
1X
1Y
0#!
$end
0x
0y
b00000000000000000000000000000000 ">
b00000000000000000000000000000000 "?
0"D
0"E
b00000000000000000000000000000000 "j
b00000000000000000000000000000000 "k
0#[
0#Y
b00000000000000000000000000001000 "r
b00000000000000000000000000000000 "`
b00000000000000000000000000000000 "\
b00000000000000000000000000000000 "v
b00000000000000000000000000000000 "4
b00000000000000000000000000000000 "0
b00000000000000000000000000000000 "5
b00000000000000000000000000000000 "w
b00000000000000000000000000000000 "a
b00000000000000000000000000000100 /
b000000 #_
b0xxxxxxxxxxx e
b00xxxxxxxxxx e
b00xxxxxxxxx0 e
b100xxxx00010 d
1Z
0\
0[
b00 ]
b01 ^
b00x0000xxxx0 e
b00x000000xx0 e
b00x000000000 e
b000000000000 e
0_
b0xxxxxxxxxxx t
b00xxxxxxxxxx t
b00xxxxxxxxx0 t
b100xxxx00010 s
1i
0k
0j
b00 l
b01 m
b00x0000xxxx0 t
b00x000000xx0 t
b00x000000000 t
b000000000000 t
0n
1#>
0#<
0#=
0#A
1#E
0#C
0#D
0#H
#5
0!
0X
#10
1!
1X
#15
0!
0X
#20
1!
1X
#25
0!
0X
#30
0"
0Y
b00000000000000000000000000001010 #
1!
1X
b00000000000000000000000000001000 .
b00000000000000000000000000001100 /
b000010 #_
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 '
b00000000000000000000000000001100 "p
b00000000000000000000000000010000 "q
b00000000000000000000000000010000 "r
b100xxxx00010 f
b01 A
b000000000010 e
bxxxx B
b000xxxx00010 e
x#A
1:
b100xxxx00010 e
b100xxxx00010 u
b01 T
b000000000010 t
bxxxx U
b000xxxx00010 t
x#H
1M
b100xxxx00010 t
b00000000000000000100000000100101 "|
b00000000000000000100000000100101 "1
b01000 "!
b100101 1
b0100000000100101 #$
b00000000000000010000000010010100 "v
b01000000001001010000000000000000 "5
b00000000000000010000000010010100 "4
b00000000000000010000000010010100 "0
b00000000000000000000000000000100 "}
b00000000000000000000000000000100 "+
b00000000000000010000000010011000 "0
b00111100000010010000000000000001 #"
b00111100000010010000000000000001 "]
b01001 "L
b000001 D
b001111 C
b0000000000000001 #%
b00000000001001000000000000000100 "w
b00000000000000010000000000000000 "a
b00000000000000000000000000000100 "`
b00000000000000000000000000000100 "\
b00000000000000000000000000001000 ##
b00000000000000000000000000001000 "W
b00000000000000000000000000001100 "\
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #Q
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "B
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #U
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "n
b00000000000000000100000000100101 "2
b01000000001001010000000000000000 #-
b00000000000000010000000000000000 #6
b00000000000000000000000000000001 "^
b00000000000000000000000000010000 "s
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #@
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #?
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #F
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #G
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #;
x"t
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "@
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #B
x"u
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "l
b0001 a
b100000100010 d
b10010000000000 r
b100xxxx10000 s
b10 l
b00 m
b000 o
b0010 p
b100001010000 s
#35
0!
0X
#40
b00000000000000000000000000010100 #
1!
1X
b00000000000000000000000000010000 .
b00000000000000000000000000010100 /
b000100 #_
b00000000000000000000000000010100 "p
b00000000000000000000000000011000 "q
b00000000000000000000000000011000 "r
b100000100010 f
b0001 B
b100000100010 e
b1000 g
17
b100001010000 u
b00 T
b100xxxx00000 t
b10 S
b100xxxx10000 t
b0010 U
b100001010000 t
b1000 v
1J
b00000000000000000000000000000000 "|
b00000000000000000000000000000000 "1
b00000 "!
b000000 1
b0000000000000000 #$
b00000000000000000000000000000000 "v
b00000000000000000000000000000000 "5
b00000000000000000000000000000000 "4
b00000000000000000000000000000100 "0
b00000000000000000000000000001100 "}
b00000000000000000000000000001100 "+
b00000000000000000000000000001100 "0
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 "]
b00000 "L
b000000 D
b000000 C
b0000000000000000 #%
b00000000000000000000000000000000 "w
b00000000000000000000000000000000 "a
b00000000000000000000000000000000 "`
b00000000000000000000000000001000 "\
b00000000000000000000000000010000 ##
b00000000000000000000000000010000 "W
b00000000000000000000000000010000 "\
b01000 #+
b01000 "$
b00000000000000000100000000100101 #,
b00000000000000000100000000100101 "3
b01000000001001010000000000000000 #.
b01000000001001010000000000000000 "6
b00000000000000000000000000000100 #/
b00000000000000000000000000000100 ",
b01001 #3
b01001 "O
b00000000000000000000000000000001 #5
b00000000000000000000000000000001 "_
b00000000000000010000000000000000 #7
b00000000000000010000000000000000 "b
b00000000000000000000000000001000 #8
b00000000000000000000000000001000 "X
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #I
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #M
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx *
b00000000000000000000000000000000 "2
b00000000000000000000000000000000 #-
b00000000000000000000000000000000 #6
b00000000000000000000000000000000 "^
b00000000000000000000000000011000 "s
b01000 "%
b01001 "Q
b00000000000000010000000000000000 "f
0#E
1#C
b00000000000000000000000000000000 #?
0#A
b00000000000000010000000000000000 #F
0#H
b00000000000000000000000000000000 #@
b00000000000000010000000000000000 #G
bxxxx a
b100xxxx00010 d
b10100000000010 r
b100001000010 s
b00 l
b01 m
b010 o
b00000000000000000000000000000000 #;
1"t
b00000000000000000000000000000000 "@
b00000000000000010000000000000000 #B
0"u
b00000000000000010000000000000000 "l
bxxxx p
b100xxxx00010 s
#45
0!
0X
#50
b00000000000000000000000000011110 #
1!
1X
b00000000000000000000000000011000 .
b00000000000000000000000000011100 /
b000110 #_
b00000001000010010101000000101010 ,
b00000000000000000000000000011100 "p
b00000000000000000000000000100000 "q
b00000000000000000000000000100000 "r
b100xxxx00010 f
bxxxx B
b100xxxx00010 e
x#A
b100 h
14
b100xxxx00010 u
b01 T
b100001010010 t
b00 S
b100001000010 t
bxxxx U
b100xxxx00010 t
x#H
b100 w
1G
b00000000000000000000000000010100 "}
b00000000000000000000000000010100 "+
b00000000000000000000000000010100 "0
b00000000000000000000000000011000 ##
b00000000000000000000000000011000 "W
b00000000000000000000000000011000 "\
b00000 #+
b00000 "$
b00000000000000000000000000000000 #,
b00000000000000000000000000000000 "3
b00000000000000000000000000000000 #.
b00000000000000000000000000000000 "6
b00000000000000000000000000001100 #/
b00000000000000000000000000001100 ",
b00000 #3
b00000 "O
b00000000000000000000000000000000 #5
b00000000000000000000000000000000 "_
b00000000000000000000000000000000 #7
b00000000000000000000000000000000 "b
b00000000000000000000000000010000 #8
b00000000000000000000000000010000 "X
b00000000000000000000000000000000 #I
b00000000000000000000000000000000 %
b01000 #K
b01000 "&
b00000000000000000000000000000100 #L
b00000000000000000000000000000100 "-
b00000000000000010000000000000000 #M
b00000000000000010000000000000000 *
b01001 #O
b01001 "R
b00000000000000000000000000001000 #P
b00000000000000000000000000001000 "Y
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #R
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "A
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #V
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "m
b00000000000000000000000000100000 "s
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #@
b00000 "Q
b00000 "%
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "C
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "o
b00000000000000000000000000000000 "f
1#E
0#C
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #?
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #F
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #G
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "(
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "T
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #;
x"t
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "@
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #B
x"u
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "l
#55
0!
0X
#60
b00000000000000000000000000101000 #
1!
1X
b00000000000000000000000000100000 .
b00000000000000000000000000100100 /
b001000 #_
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,
b10101101000010010000000000000000 '
b00000000000000000000000000100100 "p
b00000000000000000000000000101000 "q
b00000000000000000000000000101000 "r
b00000000000000000000000000011100 "}
b00000000000000000000000000011100 "+
b00000000000000000000000000011100 "0
b00000001000010010101000000101010 #"
b00000001000010010101000000101010 "]
b01010 "M
b01001 "L
b01000 "K
b101010 D
b0101000000101010 #%
b00000100001001010100000010101000 "w
1"E
b00000000000000010000000000000000 "k
b01010000001010100000000000000000 "a
b00000000000000010100000010101000 "`
b00000000000000010100000011000000 "\
b00000000000000000000000000100000 ##
b00000000000000000000000000100000 "W
b00000000000000010100000011001000 "\
b00000000000000000000000000010100 #/
b00000000000000000000000000010100 ",
b00000000000000000000000000011000 #8
b00000000000000000000000000011000 "X
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #I
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
b00000 #K
b00000 "&
b00000000000000000000000000001100 #L
b00000000000000000000000000001100 "-
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #M
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx *
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "k
b00000 #O
b00000 "R
0"E
b00000000000000000000000000000000 "k
b00000000000000000000000000010000 #P
b00000000000000000000000000010000 "Y
b00000000000000000000000000000000 #R
b00000000000000000000000000000000 "A
b01000 #S
b01000 "'
b00000000000000000000000000000100 #T
b00000000000000000000000000000100 ".
b00000000000000010000000000000000 #V
b00000000000000010000000000000000 "m
b01001 #W
b01001 "S
b00000000000000000000000000001000 #X
b00000000000000000000000000001000 "Z
b01010000001010100000000000000000 #6
b00000000000000000101000000101010 "^
b00000000000000000000000000101000 "s
b00000000000000000000000000000000 "C
b00000000000000010000000000000000 "o
b00000000000000000000000000000000 "(
b00000000000000010000000000000000 "T
b1011 p
b100101100010 s
#65
0!
0X
b00000000000000010000000000000000 "e
b00000000000000010000000000000000 "k
0E
#70
b00000000000000000000000000110010 #
1!
1X
b00000000000000000000000000101000 .
b00000000000000000000000000101100 /
b001010 #_
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx '
b00000000000000000000000000101100 "p
b00000000000000000000000000110000 "q
b00000000000000000000000000110000 "r
b100101100010 u
b1011 U
b100101100010 t
b10101101000010010000000000000000 "|
b10101101000010010000000000000000 "1
b01001 ~
b01000 }
b101011 0
b00000100001001000000000000000000 "v
b00000000000000000000000000100100 "}
b00000000000000000000000000100100 "+
b00000000000000000000000000100100 "0
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "]
bxxxxx "M
bxxxxx "L
bxxxxx "K
bxxxxxx D
bxxxxxx C
bxxxxxxxxxxxxxxxx #%
b0000xxxxxxxxxxxxxxxxxxxxxxxxxx00 "w
x"D
x"E
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "j
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "k
bxxxxxxxxxxxxxxxx0000000000000000 "a
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00 "`
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "\
b00000000000000000000000000101000 ##
b00000000000000000000000000101000 "W
b00000000000000000000000000011100 #/
b00000000000000000000000000011100 ",
b00000000000000010000000000000000 #1
b00000000000000010000000000000000 "i
b01000 #2
b01000 "N
b01001 #3
b01001 "O
b01010 #4
b01010 "P
b00000000000000000101000000101010 #5
b00000000000000000101000000101010 "_
b01010000001010100000000000000000 #7
b01010000001010100000000000000000 "b
b00000000000000000000000000100000 #8
b00000000000000000000000000100000 "X
b00000000000000000000000000010100 #L
b00000000000000000000000000010100 "-
b00000000000000000000000000011000 #P
b00000000000000000000000000011000 "Y
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #R
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "A
b00000 #S
b00000 "'
b00000000000000000000000000001100 #T
b00000000000000000000000000001100 ".
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #V
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "m
b00000 #W
b00000 "S
b00000000000000000000000000010000 #X
b00000000000000000000000000010000 "Z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "^
bxxxxxxxxxxxxxxxx0000000000000000 #6
b00000000000000000000000000110000 "s
b00000000000000010000000000000000 "9
b00000000000000010000000000000000 "?
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "e
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "c
b01010 "Q
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "C
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "o
b00000000000000010000000000000000 "g
02
xE
b00000000000000010000000000000000 "f
0#E
1#C
b11111111111111101111111111111111 #F
0#H
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "(
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "T
b11111111111111110000000000000000 #G
b00001010000000 c
b001xxxx01000 d
0Z
1[
b01 ]
b00 ^
b000 `
bxxxx p
b100xxxx00010 s
bxxxxxxxxxxxxxx r
bxxxxxxxxxxx0 s
xi
xk
xj
bxx l
bxx m
xn
xP
xQ
x"H
xW
bxxxxxxxxxxxx s
bxxx o
b00000000000000000000000000000001 #B
0"u
b00000000000000000000000000000001 "l
x#]
xR
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "r
x#!
x"F
x"G
x"~
xF
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "s
b0010 a
b001001001000 d
#75
0!
0X
#80
b00000000000000000000000000111100 #
1!
1X
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxxxxxx #_
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "p
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "q
b001001001000 f
b00 A
b100xxxx00000 e
b01 @
b100xxxx01000 e
b0010 B
b100001001000 e
1b
b101001001000 e
0:
b001001001000 e
bxxxxxxxxxxxx u
xO
x#^
b10010110001x t
bxx T
b100101100xxx t
bxx S
b1001011xxxxx t
bxxxx U
b100xxxxxxxxx t
x#H
xq
b10xxxxxxxxxx t
xN
b1xxxxxxxxxxx t
xM
bxxxxxxxxxxxx t
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "|
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "1
bxxxxx "!
bxxxxx ~
bxxxxx }
bxxxxxx 1
bxxxxxx 0
bxxxxxxxxxxxxxxxx #$
b0000xxxxxxxxxxxxxxxxxxxxxxxxxx00 "v
xx
xy
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ">
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "?
bxxxxxxxxxxxxxxxx0000000000000000 "5
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00 "4
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "0
b00000000000000000000000000101100 "}
b00000000000000000000000000101100 "+
b00000000000000010000000000000000 #(
b00000000000000010000000000000000 "=
b01000 #)
b01000 ""
b01001 #*
b01001 "#
b00000000000000000000000000100100 #/
b00000000000000000000000000100100 ",
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #0
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "h
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "i
bxxxxx #2
bxxxxx "N
bxxxxx #3
bxxxxx "O
bxxxxx #4
bxxxxx "P
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #5
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "_
bxxxxxxxxxxxxxxxx0000000000000000 #7
bxxxxxxxxxxxxxxxx0000000000000000 "b
b00000000000000000000000000101000 #8
b00000000000000000000000000101000 "X
b00000000000000000000000000011100 #L
b00000000000000000000000000011100 "-
b00000000000000000000000000000001 #M
b00000000000000000000000000000001 *
b00000000000000010000000000000000 #N
b00000000000000010000000000000000 )
b01010 #O
b01010 "R
b00000000000000000000000000100000 #P
b00000000000000000000000000100000 "Y
b00000000000000000000000000010100 #T
b00000000000000000000000000010100 ".
b00000000000000000000000000011000 #X
b00000000000000000000000000011000 "Z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "2
bxxxxxxxxxxxxxxxx0000000000000000 #-
bxxxxx "Q
x#\
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "9
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "7
b01001 "%
b00000000000000010000000000000000 ";
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "d
x#E
x#C
x#D
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "g
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "f
x2
b00000000000000000000000000000000 #?
0#A
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #F
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #G
b00000000000000000000000000000000 #@
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #B
x"u
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "l
bxxxxxxxxxxxxxx c
bxxx0010xxxx0 d
xZ
x\
x[
bxx ]
bxx ^
x_
x=
x>
xz
xV
bxxx0010xxxxx d
bxxx `
b00000000000000000000000000000000 #;
1"t
b00000000000000000000000000000000 "@
x?
x3
x"{
x"x
#85
0!
0X
#90
b00000000000000000000000001000110 #
1!
1X
bxxx0010xxxxx f
x<
x#[
b00100100100x e
bxx A
b001001001xxx e
bxx @
b0010010xxxxx e
xb
b00x0010xxxxx e
x;
x#Y
b0xx0010xxxxx e
x:
bxxx0010xxxxx e
b0010 g
1(
07
0x
0y
bxxxx v
xL
x-
xK
xJ
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #'
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "<
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #(
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "=
bxxxxx #)
bxxxxx ""
bxxxxx #*
bxxxxx "#
bxxxxx #+
bxxxxx "$
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "3
bxxxxxxxxxxxxxxxx0000000000000000 #.
bxxxxxxxxxxxxxxxx0000000000000000 "6
b00000000000000000000000000101100 #/
b00000000000000000000000000101100 ",
b00000000000000000000000000000000 #I
b00000000000000000000000000000000 %
b00000000000000010000000000000000 #J
b00000000000000010000000000000000 $
b01001 #K
b01001 "&
b00000000000000000000000000100100 #L
b00000000000000000000000000100100 "-
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #M
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx *
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #N
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx )
bxxxxx #O
bxxxxx "R
b00000000000000000000000000101000 #P
b00000000000000000000000000101000 "Y
b00000000000000000000000000011100 #T
b00000000000000000000000000011100 ".
b00000000000000000000000000000001 #V
b00000000000000000000000000000001 "m
b01010 #W
b01010 "S
b00000000000000000000000000100000 #X
b00000000000000000000000000100000 "Z
bxxxxx "%
b00000000000000000000000000000001 "o
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "8
x#>
x#<
x#=
x#A
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ";
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ":
x#Z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #?
b00000000000000000000000000000001 "T
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #@
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #;
x"t
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "@
#95
0!
0X
#100
b00000000000000000000000001010000 #
1!
1X
b00000000000000010000000000000000 &
bxxxx g
x9
x(
x8
x7
xx
xy
b000 h
04
bxxx w
xI
xH
xG
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #I
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #J
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $
bxxxxx #K
bxxxxx "&
b00000000000000000000000000101100 #L
b00000000000000000000000000101100 "-
b00000000000000000000000000000000 #R
b00000000000000000000000000000000 "A
b01001 #S
b01001 "'
b00000000000000000000000000100100 #T
b00000000000000000000000000100100 ".
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #V
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "m
bxxxxx #W
bxxxxx "S
b00000000000000000000000000101000 #X
b00000000000000000000000000101000 "Z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "T
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "o
b00000000000000000000000000000000 "C
b00000000000000000000000000000000 "(
#105
0!
0X
#110
b00000000000000000000000001011010 #
1!
1X
bxxx h
x6
x5
x4
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #R
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "A
bxxxxx #S
bxxxxx "'
b00000000000000000000000000101100 #T
b00000000000000000000000000101100 ".
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "(
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "C
#115
0!
0X
#120
b00000000000000000000000001100100 #
1!
1X
#125
0!
0X
#130
b00000000000000000000000001101110 #
1!
1X
#135
0!
0X
#140
b00000000000000000000000001111000 #
1!
1X
#145
0!
0X
#150
b00000000000000000000000010000010 #
1!
1X
#155
0!
0X
#160
b00000000000000000000000010001100 #
1!
1X
#165
0!
0X
#170
b00000000000000000000000010010110 #
1!
1X
#175
0!
0X
